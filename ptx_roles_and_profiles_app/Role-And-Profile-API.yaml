swagger: "2.0"
info:
  description: "Role and Profile administration API"
  version: "4.0.0"
  title: "Role And Profile API"
host: "$(host.name)"
paths:
  /v1/po/security-mgmt/list-app-users:
    get:
      parameters:
      - name: "message-uuid"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "Message identifier is used for traceability. This identifier\
          \ allows you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "request-app-id"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "App identifier is used for traceability. This identifier allows\
          \ you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "pageSize"
        in: "query"
        required: true
        type: "integer"
        minimum: 1
        maximum: 100
      - name: "pageNumber"
        in: "query"
        required: true
        type: "integer"
        minimum: 1
      - name: "fullName"
        in: "query"
        type: "string"
      - name: "rol"
        in: "query"
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "list registered users"
          schema:
            $ref: "#/definitions/ListUsersResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: "Bad request or mal formatted data"
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: "Method Not Allowed."
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: "Unsupported Media Type."
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: "Internal Server Error"
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: "Bad Gateway"
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: "Service Unavailable"
        default:
          description: "Error."
      tags:
      - "List App users"
  /v1/po/security-mgmt/get-app-user/{userEmail}:
    get:
      parameters:
      - name: "message-uuid"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "Message identifier is used for traceability. This identifier\
          \ allows you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "request-app-id"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "App identifier is used for traceability. This identifier allows\
          \ you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - in: "path"
        name: "userEmail"
        required: true
        type: "string"
        description: "userId"
      responses:
        "200":
          description: "Search registered App user"
          schema:
            $ref: "#/definitions/SearchAppUserByEmailAllResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: "Bad request or mal formatted data"
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: "Method Not Allowed."
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: "Unsupported Media Type."
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: "Internal Server Error"
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: "Bad Gateway"
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: "Service Unavailable"
        default:
          description: "Error."
      tags:
      - "Query for app user"
  /v1/po/security-mgmt/get-user-roles/{userId}:
    get:
      parameters:
      - name: "message-uuid"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "Message identifier is used for traceability. This identifier\
          \ allows you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "request-app-id"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "App identifier is used for traceability. This identifier allows\
          \ you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - in: "path"
        name: "userId"
        required: true
        type: "string"
        description: "user id"
      responses:
        "200":
          description: "Search registered App user roles"
          schema:
            $ref: "#/definitions/SearchAppUserRolesResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: "Bad request or mal formatted data"
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: "Method Not Allowed."
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: "Unsupported Media Type."
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: "Internal Server Error"
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: "Bad Gateway"
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: "Service Unavailable"
        default:
          description: "Error."
      tags:
      - "Query user roles"
  /v1/po/security-mgmt/asign-user-rol:
    post:
      parameters:
      - name: "message-uuid"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "Message identifier is used for traceability. This identifier\
          \ allows you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "request-app-id"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "App identifier is used for traceability. This identifier allows\
          \ you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/asignUserRolesRequest"
      responses:
        "201":
          description: "Successful response when assigning role to user"
          schema:
            $ref: "#/definitions/asignRolResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: "Bad request or mal formatted data"
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: "Method Not Allowed."
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: "Unsupported Media Type."
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: "Internal Server Error"
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: "Bad Gateway"
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: "Service Unavailable"
        default:
          description: "Error."
      tags:
      - "Create user role"
  /v1/po/security-mgmt/erase-user-rol:
    delete:
      parameters:
      - name: "message-uuid"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "Message identifier is used for traceability. This identifier\
          \ allows you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "request-app-id"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "App identifier is used for traceability. This identifier allows\
          \ you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "userId"
        in: "query"
        required: true
        type: "string"
      - name: "enterpriseRolId"
        in: "query"
        required: false
        type: "string"
      responses:
        "201":
          description: "Successful response when assigning role to user"
          schema:
            $ref: "#/definitions/deleteRolResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: "Bad request or mal formatted data"
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: "Method Not Allowed."
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: "Unsupported Media Type."
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: "Internal Server Error"
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: "Bad Gateway"
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: "Service Unavailable"
        default:
          description: "Error."
      tags:
      - "Create user role"
  /v1/po/security-mgmt/get-apps:
    get:
      parameters:
      - name: "message-uuid"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "Message identifier is used for traceability. This identifier\
          \ allows you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "request-app-id"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "App identifier is used for traceability. This identifier allows\
          \ you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      responses:
        "200":
          description: "list registered apps"
          schema:
            $ref: "#/definitions/ListAppsResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: "Bad request or mal formatted data"
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: "Method Not Allowed."
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: "Unsupported Media Type."
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: "Internal Server Error"
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: "Bad Gateway"
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: "Service Unavailable"
        default:
          description: "Error."
      tags:
      - "List registered Apps"
  /v1/po/security-mgmt/get-roles:
    get:
      parameters:
      - name: "message-uuid"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "Message identifier is used for traceability. This identifier\
          \ allows you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      - name: "request-app-id"
        in: "header"
        required: true
        type: "string"
        format: "uuid"
        description: "App identifier is used for traceability. This identifier allows\
          \ you to identify the logs of the calls to the APIs in the log repositories,\
          \ it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
      responses:
        "200":
          description: "list registered apps"
          schema:
            $ref: "#/definitions/ListRolesResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: "Bad request or mal formatted data"
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: "Method Not Allowed."
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: "Unsupported Media Type."
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: "Internal Server Error"
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: "Bad Gateway"
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: "Service Unavailable"
        default:
          description: "Error."
      tags:
      - "List registered Roles"
  /v1/po/security-mgmt/actuator/:
    get:
      summary: "API Monitoring"
      responses:
        "200":
          description: "200 OK"
      tags:
      - "security-mgmt"
definitions:
  asignRolResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders201"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/asignUserRolesResponse"
  deleteRolResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders201"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/deleteUserRolesResponse"
  updateRoleResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/updateRoleResponse"
  pagination:
    type: "object"
    properties:
      totalElement:
        type: "number"
        example: 10
      pageSize:
        type: "number"
        example: 10
      pageNumber:
        type: "number"
        example: 1
      hasMoreElements:
        type: "boolean"
        example: false
  app:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 10
      name:
        type: "string"
        example: "Procesador Transaccional"
        maxLength: 50
      description:
        type: "string"
        example: "Aplicación ........."
        maxLength: 255
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "SUSPEND"
        - "INACTIVE"
      tag:
        type: "string"
        example: "ID001A"
        maxLength: 10
      createDt:
        type: "string"
        format: "date-time"
      updateDt:
        type: "string"
        format: "date-time"
      productRefId:
        type: "integer"
        example: 234
      redirectUri:
        type: "string"
        maxLength: 250
  enterpriseRol:
    type: "object"
    properties:
      id:
        type: "string"
        example: 10
      name:
        type: "string"
        example: "TransactionsAdmin"
        maxLength: 50
      description:
        type: "string"
        example: "Aplicación ........."
        maxLength: 255
      scheduleId:
        type: "string"
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "SUSPEND"
        - "INACTIVE"
      mainAdminRole:
        type: "boolean"
      startSuspendDate:
        type: "string"
        format: "date-time"
      endSuspendDate:
        type: "string"
        format: "date-time"
      suspendedRol:
        type: "string"
        maxLength: 5
        example: "SI"
      enterpriseAppId:
        type: "string"
        example: 234
      tag:
        type: "string"
        example: ""
  rol:
    type: "object"
    properties:
      id:
        type: "string"
        example: 101
      rolName:
        type: "string"
        example: "TransactionsAdmin"
        maxLength: 255
      tag:
        type: "string"
        example: ""
  internalRol:
    type: "object"
    properties:
      rol:
        $ref: "#/definitions/rol"
      internal:
        type: "array"
        items:
          $ref: "#/definitions/internal"
  searchByEmailUserInternalRol:
    type: "object"
    properties:
      rol:
        $ref: "#/definitions/rol"
      internal:
        type: "array"
        items:
          $ref: "#/definitions/searchUserByEmailInternal"
  internalRolModule:
    type: "object"
    required:
    - "id"
    - "moduleId"
    - "name"
    - "tag"
    - "status"
    properties:
      id:
        type: "integer"
        example: 25
      moduleId:
        type: "integer"
        example: 10
      name:
        type: "string"
        maxLength: 50
        example: "Cierre de ciclo"
      tag:
        type: "string"
        maxLength: 5
        example: ""
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "SUSPEND"
        - "INACTIVE"
      createDate:
        type: "string"
        format: "date-time"
      updateDate:
        type: "string"
        format: "date-time"
  internal:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 101
      name:
        type: "string"
        example: "Consultar logs"
  searchUserByEmailInternal:
    type: "object"
    properties:
      id:
        type: "string"
        example: 101
      name:
        type: "string"
        example: "Gestion ciclos"
      moduleTag:
        type: "string"
        example: "ADMCYCLE"
      subModules:
        type: "array"
        items:
          $ref: "#/definitions/internalModule"
  internalModule:
    type: "object"
    properties:
      id:
        type: "string"
        example: 1
      name:
        type: "string"
        example: "Calendario y excepciones Ciclo"
      tag:
        type: "string"
        example: ""
      scopes:
        type: "array"
        items:
          $ref: "#/definitions/internalScope"
  internalScope:
    type: "object"
    properties:
      scopeId:
        type: "string"
        example: 23
      submoduleId:
        type: "string"
      name:
        type: "string"
      tag:
        type: "string"
  ListRolResult:
    type: "object"
    properties:
      userId:
        type: "string"
        example: "59868fc1-6341-4117-b5df-db4baaeade78"
      email:
        type: "string"
        example: "mario.alvarado@hotmail.com"
      fullName:
        type: "string"
        example: "camilo Arturo Becerra Benavides"
      roles:
        type: "array"
        items:
          $ref: "#/definitions/rol"
  ListAppsResult:
    type: "object"
    properties:
      apps:
        type: "array"
        items:
          $ref: "#/definitions/app"
  ListRolesResult:
    type: "object"
    properties:
      roles:
        type: "array"
        items:
          $ref: "#/definitions/enterpriseRol"
  SearchUserByEmailAllResult:
    type: "object"
    properties:
      userExist:
        type: "boolean"
        example: true
      userData:
        $ref: "#/definitions/SearchUserDataResult"
  SearchUserDataResult:
    type: "object"
    properties:
      userId:
        type: "string"
        example: 1
      documentType:
        type: "string"
        example: "CC"
      documentNumber:
        type: "string"
        example: 234565445
      fullName:
        type: "string"
        example: "Camilo Aturo lopez suarez"
      status:
        type: "string"
        example: "ACTIVE"
      roles:
        type: "array"
        items:
          $ref: "#/definitions/userRolData"
  userRolData:
    type: "object"
    properties:
      rolId:
        type: "string"
        example: "a01f0aba-b22a-11ed-afa1-0242ac120002"
      rolName:
        type: "string"
        example: "TransactionsAdmin"
      tag:
        type: "string"
        example: "TRANADM"
      mainAdminRole:
        type: "boolean"
        example: true
      status:
        type: "string"
        example: "ACTIVE"
      scopes:
        type: "string"
        example: "TRANS.PSE.QUERY,TRANS.PSE.UNMASK,TRANS.PSE.EXPORT"
  SearchByIdResult:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 1
      userId:
        type: "integer"
        example: 1
      enterpriseId:
        type: "integer"
        example: 1
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "SUSPEND"
        - "INACTIVE"
      startSuspendDate:
        type: "string"
        format: "date-time"
        example: "2017-01-24T05:00:00"
      endSuspendDate:
        type: "string"
        format: "date-time"
        example: "2017-01-24T05:00:00"
      mainAdminRol:
        type: "boolean"
      suspendedRole:
        type: "string"
        enum:
        - true
        - false
      userName:
        type: "string"
        example: "usuario123"
      email:
        type: "string"
        example: "usuario.application@email.com"
      roles:
        type: "array"
        items:
          $ref: "#/definitions/internalRol"
  SearchUserRolesResult:
    type: "object"
    properties:
      roles:
        type: "array"
        items:
          $ref: "#/definitions/rol"
  SearchInternalRoleModuleResult:
    type: "object"
    properties:
      internalRolesModules:
        type: "array"
        items:
          $ref: "#/definitions/internalRolModule"
  createUserResult:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 1
      userId:
        type: "integer"
        example: 1
      enterpriseId:
        type: "integer"
        example: 1
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "SUSPEND"
        - "INACTIVE"
      startSuspendDate:
        type: "string"
        format: "date-time"
        example: "2017-01-24T05:00:00"
      endSuspendDate:
        type: "string"
        format: "date-time"
        example: "2017-01-24T05:00:00"
      mainAdminRol:
        type: "boolean"
      suspendedRole:
        type: "string"
        enum:
        - true
        - false
      userName:
        type: "string"
        example: "usuario123"
      email:
        type: "string"
        example: "usuario.application@email.com"
  asignUserRolesRequest:
    type: "object"
    required:
    - "userId"
    properties:
      userId:
        type: "string"
        example: 1
      enterpriseRolId:
        type: "string"
        example: 1
  asignUserRolesResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 1023
      userId:
        type: "integer"
        example: 1
      appId:
        type: "integer"
        example: 1
      name:
        type: "string"
      description:
        type: "string"
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "SUSPEND"
        - "INACTIVE"
      tag:
        type: "string"
      rolId:
        type: "integer"
        example: 20
  deleteUserRolesResponse:
    type: "object"
    properties:
      userIdid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe67"
      enterpriseRolId:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe67"
      status:
        type: "string"
  ListRolesResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/ListRolesResult"
  ListAppsResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/ListAppsResult"
  ListUsersResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ListRolResult"
      pagination:
        $ref: "#/definitions/pagination"
  SearchAppUserByEmailResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/SearchByIdResult"
  SearchAppUserByEmailAllResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/SearchUserByEmailAllResult"
  SearchAppUserRolesResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/SearchUserRolesResult"
  SearchInternalRolModuleResponse:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/generalResponseHeaders200"
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/SearchInternalRoleModuleResult"
  generalResponseHeaders200:
    description: "Traceability data and technical information from message."
    type: "object"
    required:
    - "httpStatusCode"
    - "httpStatusDesc"
    - "messageUuid"
    - "requestDatetime"
    - "requestAppId"
    properties:
      httpStatusCode:
        type: "number"
        example: 200
      httpStatusDesc:
        type: "string"
        example: "OK"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestDatetime:
        type: "string"
        format: "date-time"
        example: "2017-01-24T05:00:00"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  generalResponseHeaders201:
    description: "Traceability data and technical information from message."
    type: "object"
    required:
    - "httpStatusCode"
    - "httpStatusDesc"
    - "messageUuid"
    - "requestDatetime"
    - "requestAppId"
    properties:
      httpStatusCode:
        type: "number"
        example: 201
      httpStatusDesc:
        type: "string"
        example: "CREATED"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestDatetime:
        type: "string"
        format: "date-time"
        example: "2017-01-24T05:00:00"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  generalResponseHeaders202:
    description: "Traceability data and technical information from message."
    type: "object"
    required:
    - "httpStatusCode"
    - "httpStatusDesc"
    - "messageUuid"
    - "requestDatetime"
    - "requestAppId"
    properties:
      httpStatusCode:
        type: "number"
        example: 202
      httpStatusDesc:
        type: "string"
        example: "ACCEPTED"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestDatetime:
        type: "string"
        format: "date-time"
        example: "2017-01-24T05:00:00"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  messageResponse:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "0000"
      responseMessage:
        type: "string"
        example: "Success Transaction."
      responseDetails:
        type: "string"
        example: "System process information."
  generalError400:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError400"
      messageResponse:
        $ref: "#/definitions/messageResponseError400"
      errors:
        $ref: "#/definitions/exampleErrors400"
  generalError401:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError401"
      messageResponse:
        $ref: "#/definitions/messageResponseError401"
      errors:
        $ref: "#/definitions/exampleErrors401"
  generalError404:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError404"
      messageResponse:
        $ref: "#/definitions/messageResponseError404"
      errors:
        $ref: "#/definitions/exampleErrors404"
  generalError405:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError405"
      messageResponse:
        $ref: "#/definitions/messageResponseError405"
      errors:
        $ref: "#/definitions/exampleErrors405"
  generalError409:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError409"
      messageResponse:
        $ref: "#/definitions/messageResponseError409"
      errors:
        $ref: "#/definitions/exampleErrors409"
  generalError415:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError415"
      messageResponse:
        $ref: "#/definitions/messageResponseError415"
      errors:
        $ref: "#/definitions/exampleErrors415"
  generalError500:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError500"
      messageResponse:
        $ref: "#/definitions/messageResponseError500"
      errors:
        $ref: "#/definitions/exampleErrors500"
  generalError502:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError502"
      messageResponse:
        $ref: "#/definitions/messageResponseError502"
      errors:
        $ref: "#/definitions/exampleErrors502"
  generalError503:
    type: "object"
    properties:
      headers:
        $ref: "#/definitions/headersError503"
      messageResponse:
        $ref: "#/definitions/messageResponseError503"
      errors:
        $ref: "#/definitions/exampleErrors503"
  headersError400:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 400
      htttpStatusDesc:
        type: "string"
        example: "BAD_REQUEST"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError401:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 401
      htttpStatusDesc:
        type: "string"
        example: "UNAUTHORIZED"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError404:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 404
      htttpStatusDesc:
        type: "string"
        example: "NOT_FOUND"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError405:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 405
      htttpStatusDesc:
        type: "string"
        example: "METHOD_NOT_ALLOWED"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError409:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 409
      htttpStatusDesc:
        type: "string"
        example: "CONFLICT"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError415:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 415
      htttpStatusDesc:
        type: "string"
        example: "UNSOPORTED MEDIA TYPE"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError500:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 500
      htttpStatusDesc:
        type: "string"
        example: "INTERNAL_SERVER_ERROR"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError502:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 502
      htttpStatusDesc:
        type: "string"
        example: "BAD_GATEWAY"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  headersError503:
    type: "object"
    properties:
      httpStatusCode:
        type: "integer"
        example: 503
      htttpStatusDesc:
        type: "string"
        example: "SERVICE_UNAVAILABLE"
      requestDateTime:
        type: "string"
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: "string"
        example: "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
      requestAppId:
        type: "string"
        example: "acxff62e-6f12-42de-9012-1e7304418abd"
  messageResponseError400:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Bad Request Message"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError401:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Bad Credentials"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError404:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "NO PERSISTAN DATA"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError405:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Method Not Allowed"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError409:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Conflict"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError415:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Unsupported Media Type"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError500:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Error Message"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError502:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Error Message"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  messageResponseError503:
    type: "object"
    properties:
      responseCode:
        type: "string"
        example: "XXXX"
      responseMessage:
        type: "string"
        example: "Error Message"
      responseDetail:
        type: "string"
        example: "Aditional Information [Optional Value]"
  exampleErrors400:
    type: "array"
    description: "Array for 400 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors401:
    type: "array"
    description: "Array for 401 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors404:
    type: "array"
    description: "Array for 404 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors405:
    type: "array"
    description: "Array for 405 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors409:
    type: "array"
    description: "Array for 409 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors415:
    type: "array"
    description: "Array for 415 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors500:
    type: "array"
    description: "Array for 500 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors502:
    type: "array"
    description: "Array for 500 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors503:
    type: "array"
    description: "Array for 500 errors."
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  generalError:
    type: "object"
    properties:
      errorCode:
        type: "string"
        example: "XXXX"
      errorDetail:
        type: "string"
        example: "Some Error Detail"
schemes:
- "https"
produces:
- "application/json"
consumes:
- "application/json"
tags:
- name: "security-mgmt"
  description: "Operations for API Monitoring"
