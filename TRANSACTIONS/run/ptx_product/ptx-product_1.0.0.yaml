{
  "openapi": "3.0.0",
  "info": {
    "title": "ptx-product",
    "description": "This API allows managing the information corresponding to variables per product. All relevant methods are included  during the service client integration process.",
    "contact": {
      "name": "https://www.achcolombia.com.co/contactenos",
      "url": "https://www.achcolombia.com.co/contactenos",
      "email": "admin@ach.com.co"
    },
    "version": "1.0.0",
    "x-ibm-name": "ptx-product"
  },
  "servers": [
    {
      "url": "/v1/ptx/product"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Operaciones para realizar el monitoreo de la API."
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "productName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productTag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Method to create a product",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prodRq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Success create request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError409"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "product"
      }
    },
    "/products/{productid}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Method for get a product by id",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productid",
            "in": "path",
            "description": "Producto id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "404": {
            "description": "Variable Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError404"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update product information",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productid",
            "in": "path",
            "description": "id producto",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchProdRq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Success update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/patchProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "404": {
            "description": "Variable Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError404"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "product"
      }
    },
    "/products/{productid}/vars": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Method for get all varibles",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "varName",
            "in": "query",
            "description": "Nombre de variable",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Valor de variable",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productid",
            "in": "path",
            "description": "producto id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allVariablesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "404": {
            "description": "Not data found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError404"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Method to create a new variable",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productid",
            "in": "path",
            "description": "id de producto",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/varRq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Success create request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/varResponseCreate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "409": {
            "description": "Failed Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError409"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "variable"
      }
    },
    "/products/{productid}/vars/{varid}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Method for get variable by ID",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productid",
            "in": "path",
            "description": "id de producto",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "varid",
            "in": "path",
            "description": "variable id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get variable detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/variableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "404": {
            "description": "Variable Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError404"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Method for update varible by ID",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "productid",
            "in": "path",
            "description": "id de producto",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "varid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/varUpdateRq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Success update response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/varResponseUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "404": {
            "description": "Variable Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError404"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError502"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError503"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "variable"
      }
    },
    "/products/trv": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all the Products trv",
        "description": "Get Products by parameters of search.",
        "operationId": "get_all_products_by_parameters",
        "parameters": [
          {
            "name": "message-uuid",
            "in": "header",
            "description": "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f.",
            "required": true,
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-app-id",
            "in": "header",
            "required": true,
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "businessLine",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "TX",
                  "PAGOS"
                ]
              }
            }
          },
          {
            "name": "supportedCustomerTypes",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "COMPANY",
                  "FINANCIAL_INSTITUTION",
                  "INFORMATION_PARTNERS",
                  "ADMINISTRATOR_PARTNERS"
                ]
              }
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success create response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productGetManyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or mal formatted data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError400"
                }
              }
            }
          },
          "401": {
            "description": "Failed Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError401"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError404"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError405"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError409"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError415"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generalError500"
                }
              }
            }
          }
        },
        "security": [
          {
            "clientId": [],
            "clientSecret": []
          }
        ]
      }
    },
    "/products/actuator": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "API monitoreo",
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "prodRq": {
        "required": [
          "description",
          "productId",
          "productName",
          "productTag",
          "productUuid",
          "sequenceTotal"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer"
          },
          "productName": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "productTag": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "productUuid": {
            "type": "string",
            "format": "UUID",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          },
          "sequenceTotal": {
            "minimum": 1,
            "type": "integer"
          }
        }
      },
      "patchProdRq": {
        "required": [
          "description",
          "productName",
          "productTag",
          "sequenceTotal"
        ],
        "type": "object",
        "properties": {
          "productName": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "productTag": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "sequenceTotal": {
            "minimum": 1,
            "type": "integer"
          }
        }
      },
      "varRq": {
        "required": [
          "description",
          "frameOrder",
          "status",
          "value",
          "varName"
        ],
        "type": "object",
        "properties": {
          "varName": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "value": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          },
          "frameOrder": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "LOCK",
              "SUSPEND"
            ]
          }
        }
      },
      "product": {
        "required": [
          "description",
          "id",
          "productId",
          "productName",
          "productTag",
          "productUuid",
          "sequenceName",
          "sequenceTotal",
          "updateDt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "productName": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "productTag": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string"
          },
          "productUuid": {
            "type": "string",
            "format": "UUID",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          },
          "sequenceName": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "sequenceTotal": {
            "minimum": 1,
            "type": "integer"
          },
          "createdDt": {
            "type": "string",
            "format": "date-time"
          },
          "updateDt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "variable": {
        "required": [
          "description",
          "frameOrder",
          "id",
          "status",
          "updateDt",
          "value",
          "varName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "varName": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "value": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string"
          },
          "frameOrder": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "LOCK",
              "SUSPEND"
            ]
          },
          "createdDt": {
            "type": "string",
            "format": "date-time"
          },
          "updateDt": {
            "type": "string",
            "format": "date-time"
          },
          "product": {
            "$ref": "#/components/schemas/product"
          }
        }
      },
      "patchProductResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders202"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "$ref": "#/components/schemas/product"
          }
        }
      },
      "postProductResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders201"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "$ref": "#/components/schemas/product"
          }
        }
      },
      "getProductResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders202"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "$ref": "#/components/schemas/product"
          }
        }
      },
      "variableResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders200"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "$ref": "#/components/schemas/variable"
          }
        }
      },
      "varResponseCreate": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders201"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseCreate"
          },
          "data": {
            "$ref": "#/components/schemas/variable"
          }
        }
      },
      "varResponseUpdate": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders202"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "$ref": "#/components/schemas/variable"
          }
        }
      },
      "varUpdateRq": {
        "required": [
          "description",
          "order",
          "status",
          "value",
          "varName"
        ],
        "type": "object",
        "properties": {
          "varName": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          }
        }
      },
      "allProductsResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders200"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "type": "object",
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          }
        }
      },
      "allVariablesResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders200"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "type": "object",
            "properties": {
              "vars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/variable"
                }
              }
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          }
        }
      },
      "productGetManyResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/generalResponseHeaders"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponse"
          },
          "data": {
            "type": "object",
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          }
        }
      },
      "generalResponseHeaders": {
        "required": [
          "httpStatusCode",
          "httpStatusDesc",
          "messageUuid",
          "requestAppId",
          "requestDatetime"
        ],
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 200
          },
          "httpStatusDesc": {
            "type": "string",
            "example": "OK"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          },
          "requestDatetime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Traceability data and technical information from message."
      },
      "pagination": {
        "type": "object",
        "properties": {
          "totalElement": {
            "type": "number",
            "example": 100
          },
          "pageSize": {
            "type": "number",
            "example": 10
          },
          "pageNumber": {
            "type": "number",
            "example": 1
          },
          "hasMoreElements": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "generalResponseHeaders200": {
        "required": [
          "httpStatusCode",
          "httpStatusDesc",
          "messageUuid",
          "requestAppId",
          "requestDatetime"
        ],
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "number",
            "example": 200
          },
          "httpStatusDesc": {
            "type": "string",
            "example": "OK"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        },
        "description": "Traceability data and technical information from message."
      },
      "generalResponseHeaders201": {
        "required": [
          "httpStatusCode",
          "httpStatusDesc",
          "messageUuid",
          "requestAppId",
          "requestDatetime"
        ],
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "number",
            "example": 201
          },
          "httpStatusDesc": {
            "type": "string",
            "example": "CREATED"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        },
        "description": "Traceability data and technical information from message."
      },
      "generalResponseHeaders202": {
        "required": [
          "httpStatusCode",
          "httpStatusDesc",
          "messageUuid",
          "requestAppId",
          "requestDatetime"
        ],
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "number",
            "example": 202
          },
          "httpStatusDesc": {
            "type": "string",
            "example": "ACCEPTED"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        },
        "description": "Traceability data and technical information from message."
      },
      "messageResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "0000"
          },
          "responseMessage": {
            "type": "string",
            "example": "Success Transaction."
          },
          "responseDetails": {
            "type": "string",
            "example": "System process information."
          }
        }
      },
      "messageResponseCreate": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "0000"
          },
          "responseMessage": {
            "type": "string",
            "example": "Success Create Transaction"
          },
          "responseDetails": {
            "type": "string",
            "example": "Customer Created Id: XXXX-XXXX-XXXX-XXX"
          }
        }
      },
      "generalError400": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError400"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError400"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors400"
          }
        }
      },
      "generalError401": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError401"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError401"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors401"
          }
        }
      },
      "generalError404": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError404"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError404"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors404"
          }
        }
      },
      "generalError405": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError405"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError405"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors405"
          }
        }
      },
      "generalError409": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError409"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError409"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors409"
          }
        }
      },
      "generalError415": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError415"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError415"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors415"
          }
        }
      },
      "generalError500": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError500"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError500"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors500"
          }
        }
      },
      "generalError502": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError502"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError502"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors502"
          }
        }
      },
      "generalError503": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/headersError503"
          },
          "messageResponse": {
            "$ref": "#/components/schemas/messageResponseError503"
          },
          "errors": {
            "$ref": "#/components/schemas/exampleErrors503"
          }
        }
      },
      "headersError400": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 400
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "BAD_REQUEST"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError401": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 401
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "UNAUTHORIZED"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError404": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 404
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "NOT_FOUND"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError405": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 405
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "METHOD_NOT_ALLOWED"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError409": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 409
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "CONFLICT"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError415": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 415
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "UNSOPORTED MEDIA TYPE"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError500": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 500
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError502": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 502
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "BAD_GATEWAY"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "headersError503": {
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "example": 503
          },
          "htttpStatusDesc": {
            "type": "string",
            "example": "SERVICE_UNAVAILABLE"
          },
          "requestDateTime": {
            "type": "string",
            "example": "2023-01-05T19:13:56.000Z"
          },
          "messageUuid": {
            "type": "string",
            "example": "c4e6bd04-5149-11e7-b114-a2f933d5fe66"
          },
          "requestAppId": {
            "type": "string",
            "example": "acxff62e-6f12-42de-9012-1e7304418abd"
          }
        }
      },
      "messageResponseError400": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Bad Request Message"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError401": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Bad Credentials"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError404": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "NO PERSISTAN DATA"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError405": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Method Not Allowed"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError409": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Conflict"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError415": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Unsupported Media Type"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError500": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Error Message"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError502": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Error Message"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "messageResponseError503": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "example": "XXXX"
          },
          "responseMessage": {
            "type": "string",
            "example": "Error Message"
          },
          "responseDetail": {
            "type": "string",
            "example": "Aditional Information [Optional Value]"
          }
        }
      },
      "exampleErrors400": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 400 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors401": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 401 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors404": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 404 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors405": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 405 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors409": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 409 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors415": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 415 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors500": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 500 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors502": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 500 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "exampleErrors503": {
        "uniqueItems": true,
        "type": "array",
        "description": "Array for 500 errors.",
        "items": {
          "$ref": "#/components/schemas/generalError"
        }
      },
      "generalError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "example": "XXXX"
          },
          "errorDetail": {
            "type": "string",
            "example": "Some Error Detail"
          }
        }
      }
    },
    "securitySchemes": {
      "clientId": {
        "type": "apiKey",
        "description": "",
        "name": "Client-Id",
        "in": "header",
        "x-key-type": "client_id"
      },
      "clientSecret": {
        "type": "apiKey",
        "description": "",
        "name": "Client-Secret",
        "in": "header",
        "x-key-type": "client_secret"
      }
    }
  }
}