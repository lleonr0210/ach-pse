swagger: '2.0'
info:
  title: Config Management API
  version: 1.5.0 
  description: This API aims to manage vars by product.
host: $(host.name)
paths:
  /v1/po/products:
    get:
      summary: Get all products
      parameters:
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: pageSize
          in: query
          required: true
          type: integer
          minimum: 1
          maximum: 100
        - name: pageNumber
          in: query
          required: true
          type: integer
          minimum: 1    
          
        - name: productName
          in: query
          type: string
        - name: productTag
          in: query
          type: string
          
      responses:
        '200':
          schema:
            $ref: '#/definitions/allProductsResponse' 
          description: Accepted
        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '405':
          schema:
            $ref: '#/definitions/generalError405'
          description: Method Not Allowed.
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products
    post:
      summary: Creating producto
      parameters:
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is   d for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - in: body
          name: product
          schema:
            $ref: '#/definitions/prodRq'          
      responses:
        '201':
          schema:
            $ref: '#/definitions/postProductResponse' 
          description: La solicitud se ha generado correctamente
        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '405':
          schema:
            $ref: '#/definitions/generalError405'
          description: Method Not Allowed.
        '409':
          schema:
            $ref: '#/definitions/generalError409'
          description: Conflict.          
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products        
  /v1/po/products/{productid}:
    get:
      summary: Get product by id
      parameters:
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - in: path
          name: productid
          required: true
          type: string
          description: Producto id
      responses:
        '200':
          schema:
            $ref: '#/definitions/getProductResponse' 
          description: La solicitud se ha generado correctamente
        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '404':
          schema:
            $ref: '#/definitions/generalError404'
          description: Variable Not Found.
        '405':
          schema:
            $ref: '#/definitions/generalError405'
          description: Method Not Allowed.
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products          
    patch:
      summary: Update product information
      parameters: 
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - in: path
          name: productid
          required: true
          type: string
          description: id producto
        - in: body
          name: product
          schema:
            $ref: '#/definitions/patchProdRq'          
      responses:
        '202':
          schema:
            $ref: '#/definitions/patchProductResponse' 
          description: Success
        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '404':
          schema:
            $ref: '#/definitions/generalError404'
          description: Variable Not Found.
        '405':
          schema:
            $ref: '#/definitions/generalError405'
          description: Method Not Allowed.
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products          
  /v1/po/products/{productid}/vars:
    get:
      summary: Get all vars
      parameters:
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: pageSize
          in: query
          required: true
          type: integer
          minimum: 1
          maximum: 100
        - name: pageNumber
          in: query
          required: true
          type: integer
          minimum: 1
        - name: varName
          in: query
          type: string
          description: Nombre de variable
        - name: value
          in: query
          type: string
          description: Valor de variable
        - in: path
          name: productid
          required: true
          type: string
          description: producto id          
      responses:
        '200':
          schema:
            $ref: '#/definitions/allVariablesResponse' 
          description: La solicitud se ha generado correctamente
        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '404':
          schema:
            $ref: '#/definitions/generalError404'
          description: Not data found          
        '405':
          schema:
            $ref: '#/definitions/generalError405'
          description: Method Not Allowed.
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products
    post:
      summary: Creating variable
      parameters:
        
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - in: body
          name: variable
          schema:
            $ref: '#/definitions/varRq'
        - in: path
          name: productid
          required: true
          type: string
          description: id de producto                      
      responses:
        '201':
          schema:
            $ref: '#/definitions/varResponseCreate'
          description: Created

        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '405':
          schema:
            $ref: '#/definitions/generalError405'
          description: Method Not Allowed     
        '409':
          schema:
            $ref: '#/definitions/generalError409'
          description: Failed Authorization          
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products

  /v1/po/products/{productid}/vars/{varid}:
    get:
      summary: Get variable by ID
      parameters:
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - in: path
          name: productid
          required: true
          type: string
          description: id de producto                    
        - in: path
          name: varid
          required: true
          type: string
          description: variable id
      
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/variableResponse'
        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '404':
          schema:
            $ref: '#/definitions/generalError404'
          description: Variable Not Found.
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products
    patch:
      summary: Update variable information
      parameters:
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
        - in: path
          name: productid
          required: true
          type: string
          description: id de producto          
        - in: path
          name: varid
          required: true
          type: string
        - in: body
          name: variable
          schema:
            $ref: '#/definitions/varUpdateRq'
      responses:
        '202':
          schema:
            $ref: '#/definitions/varResponseUpdate'
          description: La solicitud se ha generado correctamente
        '400':
          schema:
            $ref: '#/definitions/generalError400'
          description: Bad request or mal formatted data
        '404':
          schema:
            $ref: '#/definitions/generalError404'
          description: Variable Not Found.
        '405':
          schema:
            $ref: '#/definitions/generalError405'
          description: Method Not Allowed          
        '415':
          schema:
            $ref: '#/definitions/generalError415'
          description: Unsupported Media Type.
        '500':
          schema:
            $ref: '#/definitions/generalError500'
          description: Internal Server Error
        '502':
          schema:
            $ref: '#/definitions/generalError502'
          description: Bad Gateway
        '503':
          schema:
            $ref: '#/definitions/generalError503'
          description: Service Unavailable
        default:
          description: Error.
      tags:
        - Products
  /v1/po/products/actuator/:
    get:
      summary: API monitoreo
      responses:
        '200':
          description: 200 OK
      tags:
        - Products
definitions:
  
  prodRq:
    required:
      - productName
      - description
      - productTag
      - productUuid
      - sequenceTotal
    type: object
    properties:
      productName:
        type: string
        minLength: 3
        maxLength: 50
      description:
        type: string
      productTag:
        type: string
        minLength: 3
        maxLength: 5
      productUuid:
        type: string
        format: UUID
        example: acxff62e-6f12-42de-9012-1e7304418abd
      sequenceTotal:
        type: integer
        minimum: 1
  patchProdRq:
    required:
      - productName
      - description
      - productTag
      - sequenceTotal
    type: object
    properties:
      productName:
        type: string
        minLength: 3
        maxLength: 50
      description:
        type: string
      productTag:
        type: string
        minLength: 3
        maxLength: 5
      sequenceTotal:
        type: integer
        minimum: 1
  varRq:
    required: 
      - varName
      - value
      - frameOrder
      - description
      - status
    type: object
    properties:
      varName:
        type: string
        minLength: 3
        maxLength: 50
      value:
        type: string
        minLength: 2
        maxLength: 20
      frameOrder:
        type: integer
      description:
        type: string
      status:
        type: string
        enum: 
          - ACTIVE
          - INACTIVE
          - LOCK
          - SUSPEND
  product:
    type: object
    required:
      - id
      - productId
      - productName
      - description
      - productTag
      - productUuid
      - sequenceName
      - sequenceTotal
      - createdDt
      - updateDt
    properties:
      id:
        type: integer
      productId:
        type: integer
      productName:
        type: string
        minLength: 3
        maxLength: 50
      description:
        type: string
      productTag:
        type: string
        minLength: 3
        maxLength: 5
      productUuid:
        type: string
        format: UUID
        example: acxff62e-6f12-42de-9012-1e7304418abd
      sequenceName:
        type: string
        minLength: 3
        maxLength: 50
      sequenceTotal:
        type: integer
        minimum: 1
      createdDt:
        type: string
        format: date-time
        example: 2017-01-24T05:00:00        
      updateDt:
        type: string
        format: date-time
        example: 2017-01-24T05:00:00
  variable:
    type: object
    required:
      - id
      - varName
      - value
      - frameOrder
      - description
      - status
      - createdDt
      - updateDt
    properties:
      id:
        type: integer
      varName:
        type: string
        minLength: 3
        maxLength: 50
      value:
        type: string
        minLength: 2
        maxLength: 20
      frameOrder:
        type: integer
      description:
        type: string
      status:
        type: string
        enum: 
          - ACTIVE
          - INACTIVE
          - LOCK
          - SUSPEND
      createdDt:
        type: string
        format: date-time
        example: 2017-01-24T05:00:00
      updateDt:
        type: string
        format: date-time
        example: 2017-01-24T05:00:00
      product:
        $ref : '#/definitions/product'
  patchProductResponse:
    type: object
    properties:
      headers: 
        $ref: '#/definitions/generalResponseHeaders202'
      messageResponse:
        $ref: '#/definitions/messageResponse'
      data: 
        $ref : '#/definitions/product'
  postProductResponse:
    type: object
    properties:
      headers: 
        $ref: '#/definitions/generalResponseHeaders201'
      messageResponse:
        $ref: '#/definitions/messageResponse'
      data: 
        $ref : '#/definitions/product'        
  getProductResponse:
    type: object
    properties:
      headers: 
        $ref: '#/definitions/generalResponseHeaders202'
      messageResponse:
        $ref: '#/definitions/messageResponse'
      data: 
        $ref : '#/definitions/product'        
  variableResponse:
    type: object
    properties: 
      headers: 
        $ref: '#/definitions/generalResponseHeaders200'
      messageResponse:
        $ref: '#/definitions/messageResponse'
      data: 
        $ref : '#/definitions/variable'
  varResponseCreate:
    type: object
    properties: 
      headers: 
        $ref: '#/definitions/generalResponseHeaders201'
      messageResponse:
        $ref: '#/definitions/messageResponseCreate'
      data: 
        $ref : '#/definitions/variable'
  varResponseUpdate:
    type: object
    properties: 
      headers: 
        $ref: '#/definitions/generalResponseHeaders202'
      messageResponse:
        $ref: '#/definitions/messageResponse'
      data: 
        $ref : '#/definitions/variable'        
  varUpdateRq:
    type: object
    required: 
      - varName
      - value
      - order
      - description
      - status
    properties: 
      varName:
        type: string
      value: 
        type: string
      order:
        type: string
      description:
        type: string
      status:
        type: string
        enum:
        - ACTIVE
        - INACTIVE
  allProductsResponse:
    type: object
    properties: 
      headers: 
        $ref: '#/definitions/generalResponseHeaders200'
      messageResponse:
        $ref: '#/definitions/messageResponse'
      data: 
        type: object
        properties: 
          products: 
            type: array
            items: 
              $ref: '#/definitions/product'
      pagination:
        $ref: '#/definitions/pagination'        
  allVariablesResponse:
    type: object
    properties: 
      headers: 
        $ref: '#/definitions/generalResponseHeaders200'
      messageResponse:
        $ref: '#/definitions/messageResponse'
      data: 
        type: object
        properties: 
          vars: 
            type: array
            items: 
              $ref: '#/definitions/variable'
      pagination:
        $ref: '#/definitions/pagination'
  pagination:
    type: object
    properties:
      totalElement:
        type: number
        example: 100
      pageSize:
        type: number
        example: 10
      pageNumber:
        type: number
        example: 1
      hasMoreElements:
        type: boolean
        example: true
  generalResponseHeaders200:
    description: Traceability data and technical information from message.
    type: object
    required:
      - httpStatusCode
      - httpStatusDesc
      - messageUuid
      - requestDatetime
      - requestAppId
    properties:
      httpStatusCode:
        type: number
        example: 200
      httpStatusDesc:
        type: string
        example: OK
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestDatetime:
        type: string
        format: date-time
        example: '2017-01-24T05:00:00'
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  generalResponseHeaders201:
    description: Traceability data and technical information from message.
    type: object
    required:
      - httpStatusCode
      - httpStatusDesc
      - messageUuid
      - requestDatetime
      - requestAppId
    properties:
      httpStatusCode:
        type: number
        example: 201
      httpStatusDesc:
        type: string
        example: CREATED
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestDatetime:
        type: string
        format: date-time
        example: '2017-01-24T05:00:00'
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  generalResponseHeaders202:
    description: Traceability data and technical information from message.
    type: object
    required:
      - httpStatusCode
      - httpStatusDesc
      - messageUuid
      - requestDatetime
      - requestAppId
    properties:
      httpStatusCode:
        type: number
        example: 202
      httpStatusDesc:
        type: string
        example: ACCEPTED
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestDatetime:
        type: string
        format: date-time
        example: '2017-01-24T05:00:00'
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd    
  messageResponse:
    type: object
    properties:
      responseCode:
        type: string
        example: '0000'
      responseMessage:
        type: string
        example: 'Success Transaction.'
      responseDetails:
        type: string
        example: 'System process information.'
  messageResponseCreate:
    type: object
    properties:
      responseCode:
        type: string
        example: '0000'
      responseMessage:
        type: string
        example: 'Success Create Transaction'
      responseDetails:
        type: string
        example: 'Customer Created Id: XXXX-XXXX-XXXX-XXX'
  generalError400:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError400'
      messageResponse:
        $ref: '#/definitions/messageResponseError400'
      errors:
        $ref: '#/definitions/exampleErrors400'
  generalError401:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError401'
      messageResponse:
        $ref: '#/definitions/messageResponseError401'
      errors:
        $ref: '#/definitions/exampleErrors401'
  generalError404:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError404'
      messageResponse:
        $ref: '#/definitions/messageResponseError404'
      errors:
        $ref: '#/definitions/exampleErrors404'
  generalError405:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError405'
      messageResponse:
        $ref: '#/definitions/messageResponseError405'
      errors:
        $ref: '#/definitions/exampleErrors405'        
  generalError409:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError409'
      messageResponse:
        $ref: '#/definitions/messageResponseError409'
      errors:
        $ref: '#/definitions/exampleErrors409'        
  generalError415:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError415'
      messageResponse:
        $ref: '#/definitions/messageResponseError415'
      errors:
        $ref: '#/definitions/exampleErrors415'
  generalError500:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError500'
      messageResponse:
        $ref: '#/definitions/messageResponseError500'
      errors:
        $ref: '#/definitions/exampleErrors500'
  generalError502:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError502'
      messageResponse:
        $ref: '#/definitions/messageResponseError502'
      errors:
        $ref: '#/definitions/exampleErrors502'
  generalError503:
    type: object
    properties:
      headers:
        $ref: '#/definitions/headersError503'
      messageResponse:
        $ref: '#/definitions/messageResponseError503'
      errors:
        $ref: '#/definitions/exampleErrors503'
  headersError400:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 400
      htttpStatusDesc:
        type: string
        example: 'BAD_REQUEST'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError401:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 401
      htttpStatusDesc:
        type: string
        example: 'UNAUTHORIZED'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError404:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 404
      htttpStatusDesc:
        type: string
        example: 'NOT_FOUND'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError405:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 405
      htttpStatusDesc:
        type: string
        example: 'METHOD_NOT_ALLOWED'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError409:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 409
      htttpStatusDesc:
        type: string
        example: 'CONFLICT'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError415:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 415
      htttpStatusDesc:
        type: string
        example: 'UNSOPORTED MEDIA TYPE'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd        
  headersError500:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 500
      htttpStatusDesc:
        type: string
        example: 'INTERNAL_SERVER_ERROR'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError502:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 502
      htttpStatusDesc:
        type: string
        example: 'BAD_GATEWAY'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError503:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 503
      htttpStatusDesc:
        type: string
        example: 'SERVICE_UNAVAILABLE'
      requestDateTime:
        type: string
        example: '2023-01-05T19:13:56'
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  messageResponseError400:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Bad Request Message'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'
  messageResponseError401:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Bad Credentials'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'
  messageResponseError404:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'NO PERSISTAN DATA'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'
  messageResponseError405:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Method Not Allowed'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'        
  messageResponseError409:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Conflict'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'    
  messageResponseError415:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Unsupported Media Type'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'            
        
  messageResponseError500:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Error Message'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'
  messageResponseError502:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Error Message'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'
  messageResponseError503:
    type: object
    properties:
      responseCode:
        type: string
        example: 'XXXX'
      responseMessage:
        type: string
        example: 'Error Message'
      responseDetail:
        type: string
        example: 'Aditional Information [Optional Value]'
  exampleErrors400:
    type: array
    description: Array for 400 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'
  exampleErrors401:
    type: array
    description: Array for 401 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'
  exampleErrors404:
    type: array
    description: Array for 404 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'
  exampleErrors405:
    type: array
    description: Array for 405 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'      
  exampleErrors409:
    type: array
    description: Array for 409 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'      
  exampleErrors415:
    type: array
    description: Array for 415 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'           
  exampleErrors500:
    type: array
    description: Array for 500 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'
  exampleErrors502:
    type: array
    description: Array for 500 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'
  exampleErrors503:
    type: array
    description: Array for 500 errors.
    uniqueItems: true
    items:
      $ref: '#/definitions/generalError'
  generalError:
    type: object
    properties:
      errorCode:
        type: string
        example: 'XXXX'
      errorDetail:
        type: string
        example: 'Some Error Detail'
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: Products
    description: Operations to perform API monitoring.